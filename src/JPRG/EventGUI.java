
package JPRG;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

/**
 *
 * @author Amanda Quek
 */
public class EventGUI extends javax.swing.JFrame {

    private EventManagement events = new EventManagement();
    private Event[] userEvents = new Event[0];

    public boolean checkDate(String data) {
        boolean result = true;
        int[] daylst = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        String[] datalst, datelst, timelst;
        if (data.matches("([0-9]{4})-([0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})")) {
            datalst = data.split(" ");
            datelst = datalst[0].split("-");
            int givenYear = Integer.parseInt(datelst[0]);
            int givenMonth = Integer.parseInt(datelst[1]);
            int givenDay = Integer.parseInt(datelst[2]);

            if (givenMonth < 1 || givenMonth > 12) {
                result = false;
            } else if (givenMonth == 2) {
                if (((givenYear % 4 == 0) && (givenYear % 100 != 0)) || (givenYear % 400 == 0)) {
                    if (givenDay < 1 || givenDay > 29) {
                        result = false;
                    }
                }
            } else if (givenDay < 1 || givenDay > daylst[givenMonth - 1]) {
                result = false;
            }

            timelst = datalst[1].split(":");
            if (Integer.parseInt(timelst[0]) < 0 || Integer.parseInt(timelst[0]) > 24) {
                result = false;
            } else if (Integer.parseInt(timelst[1]) < 0 || Integer.parseInt(timelst[1]) > 60) {
                result = false;
            }
        } else {
            result = false;
        }
        if (result == false){
            playSound("Sound\\\\wrongInput.wav");
        }
        return result;
    }
    
    public static void playSound(String filepath){
        InputStream music;
        try{
            music = new FileInputStream(new File(filepath));
            AudioStream audios = new AudioStream(music);
            AudioPlayer.player.start(audios);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error");
        }
    }

    /**
     * Creates new form EventGUI
     */
    public EventGUI() {
        initComponents();
        for (int i = 0; i < events.getEventObj().length; i++) {
            EventNameComboBox.addItem(events.getEventObj()[i].getName());
        }
        AdminButton.doClick();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel11 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        EventTabs = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        EventFeesInput = new javax.swing.JTextField();
        EventNameInput = new javax.swing.JTextField();
        EventOrganiserInput = new javax.swing.JTextField();
        EventDateInput = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        OnlineEventButton = new javax.swing.JRadioButton();
        FaceEventButton = new javax.swing.JRadioButton();
        AddEventButton = new javax.swing.JButton();
        LimitEventLabel = new javax.swing.JLabel();
        EventLimitInput = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        EventPeriodInput = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        DeleteEventButton = new javax.swing.JButton();
        DeleteEventInput = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        EditEventButton = new javax.swing.JButton();
        EventNameComboBox = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        SelectedEventDetails = new javax.swing.JTextPane();
        EventProperty = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        EditedProperty = new javax.swing.JTextField();
        ChangeTypeLimit = new javax.swing.JLabel();
        ChangeTypeParticipants = new javax.swing.JLabel();
        ChangeTypeLimitInput = new javax.swing.JTextField();
        ChangeTypeParticipantsInput = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        SearchNameButton = new javax.swing.JRadioButton();
        SearchFeesButton = new javax.swing.JRadioButton();
        SearchField = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        RegisterButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        ShowRegisteredButton = new javax.swing.JButton();
        UnregisterLabel = new javax.swing.JLabel();
        RegisteredEventName = new javax.swing.JComboBox<>();
        UnregisterButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        RegisteredEvents = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        AdminButton = new javax.swing.JRadioButton();
        UserButton = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ConfirmResultTextArea = new javax.swing.JTextArea();
        EventDetailsButton = new javax.swing.JButton();
        DisplayEventButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DisplayTextArea = new javax.swing.JTextArea();
        ExitButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jMenu1.setText("jMenu1");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EventFrame");
        setBackground(new java.awt.Color(214, 255, 244));
        setName("EventFrame"); // NOI18N

        jPanel14.setBackground(new java.awt.Color(193, 246, 235));
        jPanel14.setForeground(new java.awt.Color(174, 233, 232));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 0, 36)); // NOI18N
        jLabel1.setText("Event Management System");

        EventTabs.setBackground(new java.awt.Color(193, 246, 235));
        EventTabs.setDoubleBuffered(true);

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel9.setBackground(new java.awt.Color(148, 213, 201));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Add / Delete Event"));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel6.setText("Organiser:");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel7.setText("Name:");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel8.setText("Date (yyyy-MM-dd HH:mm):");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel9.setText("Fees:");

        buttonGroup4.add(OnlineEventButton);
        OnlineEventButton.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        OnlineEventButton.setText("Online Event");
        OnlineEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OnlineEventButtonActionPerformed(evt);
            }
        });

        buttonGroup4.add(FaceEventButton);
        FaceEventButton.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        FaceEventButton.setSelected(true);
        FaceEventButton.setText("Face to Face Event");
        FaceEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FaceEventButtonActionPerformed(evt);
            }
        });

        AddEventButton.setBackground(new java.awt.Color(255, 116, 116));
        AddEventButton.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        AddEventButton.setForeground(new java.awt.Color(255, 255, 255));
        AddEventButton.setText("Add Event");
        AddEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddEventButtonActionPerformed(evt);
            }
        });

        LimitEventLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        LimitEventLabel.setText("Limit:");

        jLabel16.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel16.setText("Period:");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(OnlineEventButton)
                        .addGap(81, 81, 81)
                        .addComponent(FaceEventButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(AddEventButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(EventPeriodInput)
                            .addComponent(EventDateInput)
                            .addComponent(EventFeesInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(EventOrganiserInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(EventNameInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(LimitEventLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EventLimitInput, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OnlineEventButton)
                    .addComponent(FaceEventButton))
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EventNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EventOrganiserInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EventFeesInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EventDateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(EventPeriodInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LimitEventLabel)
                    .addComponent(EventLimitInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddEventButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        EventTabs.addTab("Add Event", jPanel6);

        jPanel7.setBackground(new java.awt.Color(148, 213, 201));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel10.setText("Search Event to be deleted:");

        DeleteEventButton.setBackground(new java.awt.Color(255, 116, 116));
        DeleteEventButton.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        DeleteEventButton.setForeground(new java.awt.Color(255, 255, 255));
        DeleteEventButton.setText("Delete Event");
        DeleteEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteEventButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(DeleteEventInput, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jLabel10))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(DeleteEventButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel10)
                .addGap(33, 33, 33)
                .addComponent(DeleteEventInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(DeleteEventButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        EventTabs.addTab("Delete Event", jPanel7);

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel10.setBackground(new java.awt.Color(148, 213, 201));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit Event"));

        jLabel12.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel12.setText("Name:");

        EditEventButton.setBackground(new java.awt.Color(255, 116, 116));
        EditEventButton.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        EditEventButton.setForeground(new java.awt.Color(255, 255, 255));
        EditEventButton.setText("Edit Event");
        EditEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditEventButtonActionPerformed(evt);
            }
        });

        EventNameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventNameComboBoxActionPerformed(evt);
            }
        });

        SelectedEventDetails.setEditable(false);
        jScrollPane4.setViewportView(SelectedEventDetails);

        EventProperty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Organiser", "Date", "Period", "Fees", "Type", "Limit", "Participants" }));
        EventProperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventPropertyActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel2.setText("Choose Event Detail to Edit:");

        ChangeTypeLimit.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        ChangeTypeLimit.setText("Limit: ");
        ChangeTypeLimit.setVisible(false);

        ChangeTypeParticipants.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        ChangeTypeParticipants.setText("Participants:");
        ChangeTypeParticipants.setVisible(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EventNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(EventProperty, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EditedProperty))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(EditEventButton))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(ChangeTypeLimit)
                                .addGap(5, 5, 5)
                                .addComponent(ChangeTypeLimitInput, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ChangeTypeParticipants)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ChangeTypeParticipantsInput, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(EventNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EventProperty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditedProperty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChangeTypeLimit)
                    .addComponent(ChangeTypeParticipants)
                    .addComponent(ChangeTypeLimitInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChangeTypeParticipantsInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(EditEventButton)
                .addContainerGap())
        );

        ChangeTypeLimitInput.setVisible(false);
        ChangeTypeParticipantsInput.setVisible(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        EventTabs.addTab("Edit Event", jPanel8);

        jPanel2.setBackground(new java.awt.Color(148, 213, 201));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        buttonGroup3.add(SearchNameButton);
        SearchNameButton.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        SearchNameButton.setSelected(true);
        SearchNameButton.setText("Search By Name");
        SearchNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchNameButtonActionPerformed(evt);
            }
        });

        buttonGroup3.add(SearchFeesButton);
        SearchFeesButton.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        SearchFeesButton.setText("Search By Fees");
        SearchFeesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchFeesButtonActionPerformed(evt);
            }
        });

        SearchButton.setBackground(new java.awt.Color(53, 23, 255));
        SearchButton.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        SearchButton.setForeground(new java.awt.Color(255, 255, 255));
        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        RegisterButton.setBackground(new java.awt.Color(255, 116, 116));
        RegisterButton.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        RegisterButton.setForeground(new java.awt.Color(255, 255, 255));
        RegisterButton.setText("Register");
        RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(SearchNameButton)
                        .addGap(51, 51, 51)
                        .addComponent(SearchFeesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RegisterButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(129, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchNameButton)
                    .addComponent(SearchFeesButton))
                .addGap(53, 53, 53)
                .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(SearchButton)
                .addGap(39, 39, 39)
                .addComponent(RegisterButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        EventTabs.addTab("Search Events", jPanel2);

        jPanel12.setBackground(new java.awt.Color(148, 213, 201));

        ShowRegisteredButton.setBackground(new java.awt.Color(255, 25, 25));
        ShowRegisteredButton.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        ShowRegisteredButton.setForeground(new java.awt.Color(255, 255, 255));
        ShowRegisteredButton.setText("Show Registered Events");
        ShowRegisteredButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowRegisteredButtonActionPerformed(evt);
            }
        });

        UnregisterLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        UnregisterLabel.setText("Unregister for an event");
        UnregisterLabel.setVisible(false);

        RegisteredEventName.setVisible(false);

        UnregisterButton.setBackground(new java.awt.Color(255, 116, 116));
        UnregisterButton.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        UnregisterButton.setForeground(new java.awt.Color(255, 255, 255));
        UnregisterButton.setText("Unregister");
        UnregisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnregisterButtonActionPerformed(evt);
            }
        });

        RegisteredEvents.setColumns(20);
        RegisteredEvents.setRows(5);
        jScrollPane5.setViewportView(RegisteredEvents);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(RegisteredEventName, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(UnregisterButton)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(UnregisterLabel)
                                .addComponent(ShowRegisteredButton)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ShowRegisteredButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(UnregisterLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RegisteredEventName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(UnregisterButton)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        UnregisterButton.setVisible(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        EventTabs.addTab("Registered Event", jPanel4);

        jPanel1.setBackground(new java.awt.Color(193, 246, 235));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("User Type"));

        buttonGroup1.add(AdminButton);
        AdminButton.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        AdminButton.setSelected(true);
        AdminButton.setText("Administrator");
        AdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(UserButton);
        UserButton.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        UserButton.setText("Normal User");
        UserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AdminButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UserButton)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(AdminButton)
                .addComponent(UserButton))
        );

        jPanel3.setBackground(new java.awt.Color(193, 246, 235));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Confirm Result"));

        ConfirmResultTextArea.setEditable(false);
        ConfirmResultTextArea.setColumns(20);
        ConfirmResultTextArea.setRows(5);
        jScrollPane1.setViewportView(ConfirmResultTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                .addContainerGap())
        );

        EventDetailsButton.setBackground(new java.awt.Color(249, 177, 177));
        EventDetailsButton.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        EventDetailsButton.setText("Event Details");
        EventDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventDetailsButtonActionPerformed(evt);
            }
        });

        DisplayEventButton.setBackground(new java.awt.Color(14, 140, 182));
        DisplayEventButton.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        DisplayEventButton.setForeground(new java.awt.Color(255, 255, 255));
        DisplayEventButton.setText("Display Events");
        DisplayEventButton.setToolTipText("");
        DisplayEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayEventButtonActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(193, 246, 235));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Display Result"));

        DisplayTextArea.setEditable(false);
        DisplayTextArea.setColumns(20);
        DisplayTextArea.setRows(5);
        jScrollPane2.setViewportView(DisplayTextArea);

        ExitButton.setBackground(new java.awt.Color(194, 34, 66));
        ExitButton.setFont(new java.awt.Font("Eras Medium ITC", 1, 16)); // NOI18N
        ExitButton.setForeground(new java.awt.Color(255, 255, 255));
        ExitButton.setText("Exit");
        ExitButton.setMaximumSize(new java.awt.Dimension(71, 27));
        ExitButton.setMinimumSize(new java.awt.Dimension(71, 27));
        ExitButton.setPreferredSize(new java.awt.Dimension(71, 27));
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        ResetButton.setFont(new java.awt.Font("Eras Medium ITC", 2, 16)); // NOI18N
        ResetButton.setText("Reset");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 717, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ExitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ResetButton, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ResetButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(EventTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(DisplayEventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(EventDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(30, Short.MAX_VALUE))))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EventDetailsButton)
                        .addGap(18, 18, 18)
                        .addComponent(DisplayEventButton))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(EventTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        EventTabs.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void AdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminButtonActionPerformed
        // TODO add your handling code here:
        EventTabs.setSelectedIndex(0);
        EventTabs.setEnabledAt(0, true);
        EventTabs.setEnabledAt(1, true);
        EventTabs.setEnabledAt(2, true);
        EventTabs.setEnabledAt(3, true);
        EventTabs.setEnabledAt(4, false);
        RegisterButton.setEnabled(false);
    }//GEN-LAST:event_AdminButtonActionPerformed

    private void EditEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditEventButtonActionPerformed
        // TODO add your handling code here:
        int selectedPropIndex = EventProperty.getSelectedIndex();
        int selectedIndex = EventNameComboBox.getSelectedIndex();
        String result = "No Edit Occured";
        switch (selectedPropIndex) {
            case 0:
                result = events.editEvent(1, selectedIndex, EditedProperty.getText());
                break;
            case 1:
                result = events.editEvent(2, selectedIndex, EditedProperty.getText());
                break;
            case 2:
                String editDateTime = EditedProperty.getText();
                while (checkDate(editDateTime) == false) {
                    JOptionPane.showMessageDialog(null, "Invalid input! Please enter a date", "Error", JOptionPane.ERROR_MESSAGE);
                    editDateTime = JOptionPane.showInputDialog(null, "Enter the Date and Time of the Event (yyyy-MM-dd HH:mm):", "Input", JOptionPane.QUESTION_MESSAGE);
                }
                result = events.editEvent(3, selectedIndex, editDateTime);
                break;

            case 3:
                String editTimePeriod = EditedProperty.getText();
                double checkedEditPeriod = 0;
                while (true) {
                    try {
                        checkedEditPeriod = Double.parseDouble(editTimePeriod);
                        break;
                    } catch (NumberFormatException ex) {
                        playSound("Sound\\\\wrongInput.wav");
                        JOptionPane.showMessageDialog(null, "Invalid input for Period! Please enter a number", "Error (Period)", JOptionPane.ERROR_MESSAGE);
                        editTimePeriod = JOptionPane.showInputDialog(null, "Enter the Event Period(in hours):", "Input", JOptionPane.QUESTION_MESSAGE);
                    }
                }
                result = events.editEvent(4, selectedIndex, editTimePeriod);
                break;
            case 4:
                String editFees = EditedProperty.getText();
                double checkedEditFees = 0;
                while (true) {
                    try {
                        checkedEditFees = Double.parseDouble(editFees);
                        while (checkedEditFees < 0) {
                            JOptionPane.showMessageDialog(null, "Fees should not be negative!", "Error (Fees)", JOptionPane.ERROR_MESSAGE);
                            editFees = JOptionPane.showInputDialog(null, "Enter the Event fees:", "Input", JOptionPane.QUESTION_MESSAGE);
                            checkedEditFees = Double.parseDouble(editFees);
                        }
                        break;
                    } catch (NumberFormatException ex) {
                        playSound("Sound\\\\wrongInput.wav");
                        JOptionPane.showMessageDialog(null, "Invalid input for Fees! Please enter a number", "Error (Fees)", JOptionPane.ERROR_MESSAGE);
                        editFees = JOptionPane.showInputDialog(null, "Enter the Event Fees:", "Input", JOptionPane.QUESTION_MESSAGE);
                    }
                }
                result = events.editEvent(5, selectedIndex, editFees);
                break;
            case 5:

                String editType = EditedProperty.getText();
                int change = JOptionPane.showOptionDialog(new JFrame(), "Confirm to change type of event?", "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Yes", "No"}, JOptionPane.YES_OPTION);
                if (change == JOptionPane.YES_OPTION) {
                    String changeInfo = "";
                    if (events.getEventObj()[selectedIndex].eventType().equals("Online")) {
                        String changeLimit = ChangeTypeLimitInput.getText();;
                        double changeTypeLimit = 0;
                        while (true) {
                            try {
                                changeTypeLimit = Integer.parseInt(changeLimit);
                                break;
                            } catch (NumberFormatException ex) {
                                playSound("Sound\\\\wrongInput.wav");
                                JOptionPane.showMessageDialog(null, "Invalid input for Limit! Please enter a number", "Error (Limit)", JOptionPane.ERROR_MESSAGE);
                                changeLimit = JOptionPane.showInputDialog(null, "Enter the Event Limit:", "Input", JOptionPane.QUESTION_MESSAGE);
                            }
                        }

                        String changeParticipants = ChangeTypeParticipantsInput.getText();;
                        double changeTypeParticipants = 0;
                        while (true) {
                            try {
                                changeTypeParticipants = Integer.parseInt(changeParticipants);
                                break;
                            } catch (NumberFormatException ex) {
                                playSound("Sound\\\\wrongInput.wav");
                                JOptionPane.showMessageDialog(null, "Invalid input for Participants! Please enter a number", "Error (Participants)", JOptionPane.ERROR_MESSAGE);
                                changeParticipants = JOptionPane.showInputDialog(null, "Enter the Event Participants:", "Input", JOptionPane.QUESTION_MESSAGE);
                            }
                        }

                        changeInfo = changeLimit + "CHANGE" + changeParticipants;
                    }

                    result = events.editEvent(6, selectedIndex, changeInfo);
                }
                break;
            case 6:
                String editLimit = EditedProperty.getText();
                int checkedEditLimit = 0;
                while (true) {
                    try {
                        checkedEditLimit = Integer.parseInt(editLimit);
                        break;
                    } catch (NumberFormatException ex) {
                        playSound("Sound\\\\wrongInput.wav");
                        JOptionPane.showMessageDialog(null, "Invalid input for Limit! Please enter a number", "Error (Limit)", JOptionPane.ERROR_MESSAGE);
                        editLimit = JOptionPane.showInputDialog(null, "Enter the Event Limit:", "Input", JOptionPane.QUESTION_MESSAGE);
                    }
                }
                result = events.editEvent(7, selectedIndex, editLimit);
                break;
            case 7:
                String editParticipants = EditedProperty.getText();
                int checkedEditParticipants = 0;
                while (true) {
                    try {
                        checkedEditParticipants = Integer.parseInt(editParticipants);
                        break;
                    } catch (NumberFormatException ex) {
                        playSound("Sound\\\\wrongInput.wav");
                        JOptionPane.showMessageDialog(null, "Invalid input for Participants! Please enter a number", "Error (Participants)", JOptionPane.ERROR_MESSAGE);
                        editParticipants = JOptionPane.showInputDialog(null, "Enter the Event Participants:", "Input", JOptionPane.QUESTION_MESSAGE);
                    }
                }
                result = events.editEvent(8, selectedIndex, editParticipants);
                break;

        }
        DisplayEventButton.doClick();
        EventNameComboBox.setSelectedIndex(selectedIndex);
        ConfirmResultTextArea.setText(result);
    }//GEN-LAST:event_EditEventButtonActionPerformed

    private void AddEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddEventButtonActionPerformed
        // TODO add your handling code here:
        String type = "Online";
        int limit = 0;
        int participants = 0;

        String addName = EventNameInput.getText();
        String addOrganiser = EventOrganiserInput.getText();
        String addDate = EventDateInput.getText();
        while (checkDate(addDate) == false) {
            JOptionPane.showMessageDialog(null, "Invalid input! Please enter a date", "Error", JOptionPane.ERROR_MESSAGE);
            addDate = JOptionPane.showInputDialog(null, "Enter the Date and Time of the Event (yyyy-MM-dd HH:mm):", "Input", JOptionPane.QUESTION_MESSAGE);
        }

        String addPeriod = EventPeriodInput.getText();
        double checkedPeriod = 0;
        while (true) {
            try {
                checkedPeriod = Double.parseDouble(addPeriod);
                break;
            } catch (NumberFormatException ex) {
                playSound("Sound\\\\wrongInput.wav");
                JOptionPane.showMessageDialog(null, "Invalid input for Period! Please enter a number", "Error (Period)", JOptionPane.ERROR_MESSAGE);
                addPeriod = JOptionPane.showInputDialog(null, "Enter the Event Period(in hours):", "Input", JOptionPane.QUESTION_MESSAGE);
            }
        }

        String addFees = EventFeesInput.getText();
        double checkedFees = 0;
        while (true) {
            try {
                checkedFees = Double.parseDouble(addFees);
                while (checkedFees < 0) {
                    JOptionPane.showMessageDialog(null, "Fees should not be negative!", "Error (Fees)", JOptionPane.ERROR_MESSAGE);
                    addFees = JOptionPane.showInputDialog(null, "Enter the Event fees:", "Input", JOptionPane.QUESTION_MESSAGE);
                    checkedFees = Double.parseDouble(addFees);
                }
                break;
            } catch (NumberFormatException ex) {
                playSound("Sound\\\\wrongInput.wav");
                JOptionPane.showMessageDialog(null, "Invalid input for Fees! Please enter a number", "Error (Fees)", JOptionPane.ERROR_MESSAGE);
                addFees = JOptionPane.showInputDialog(null, "Enter the Event fees:", "Input", JOptionPane.QUESTION_MESSAGE);
            }
        }

        if (FaceEventButton.isSelected()) {
            type = "Face";
            String addLimit = EventLimitInput.getText();
            while (true) {
                try {
                    limit = Integer.parseInt(addLimit);
                    break;
                } catch (NumberFormatException ex) {
                    playSound("Sound\\\\wrongInput.wav");
                    JOptionPane.showMessageDialog(null, "Invalid input for limit! Please enter a number", "Error (Limit)", JOptionPane.ERROR_MESSAGE);
                    addLimit = JOptionPane.showInputDialog(null, "Enter the Event Limit:", "Input", JOptionPane.QUESTION_MESSAGE);
                }
            }
        }

        String result = events.addEvent(addName, addOrganiser, addDate, checkedPeriod, checkedFees, limit, type, participants);
        ConfirmResultTextArea.setText(result);
        if (events.getEventObj().length != EventNameComboBox.getItemCount()) {
            EventNameComboBox.addItem(addName);
        }

        DisplayEventButton.doClick();
        EventNameInput.setText("");
        EventOrganiserInput.setText("");
        EventDateInput.setText("");
        EventPeriodInput.setText("");
        EventFeesInput.setText("");
        EventLimitInput.setText("");


    }//GEN-LAST:event_AddEventButtonActionPerformed

    private void SearchFeesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchFeesButtonActionPerformed
        // TODO add your handling code here:
        RegisterButton.setEnabled(false);
        SearchField.setText("");
    }//GEN-LAST:event_SearchFeesButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
        String searchResult = "";
        if (SearchNameButton.isSelected()) {
            String name = SearchField.getText();
            searchResult = events.searchEventByName(name);
            DisplayTextArea.setText(searchResult);

        } else {
            String fees = SearchField.getText();
            double searchFees = 0;
            while (true) {
                try {
                    searchFees = Double.parseDouble(fees);
                    break;
                } catch (NumberFormatException ex) {
                    playSound("Sound\\\\wrongInput.wav");
                    JOptionPane.showMessageDialog(null, "Invalid input for Fees! Please enter a number", "Error (Fees)", JOptionPane.ERROR_MESSAGE);
                    fees = JOptionPane.showInputDialog(null, "Enter the Event fees to Search:", "Input", JOptionPane.QUESTION_MESSAGE);
                }
            }

            searchResult = events.searchEventByFees(searchFees);
            DisplayTextArea.setText(searchResult);
        }
        if (searchResult != "") {
            ConfirmResultTextArea.setText("Event(s) was found.\nSee bottom field for Search result");
        } else {
            ConfirmResultTextArea.setText("No Events Found");
        }

    }//GEN-LAST:event_SearchButtonActionPerformed

    private void DisplayEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayEventButtonActionPerformed
        // TODO add your handling code here:
        DisplayTextArea.setText(events.displayEvent());
        Color c = new Color(236,236,236);
        DisplayTextArea.setBackground(c);
    }//GEN-LAST:event_DisplayEventButtonActionPerformed

    private void OnlineEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OnlineEventButtonActionPerformed
        // TODO add your handling code here:
        LimitEventLabel.setVisible(false);
        EventLimitInput.setVisible(false);
    }//GEN-LAST:event_OnlineEventButtonActionPerformed

    private void FaceEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FaceEventButtonActionPerformed
        // TODO add your handling code here:
        EventLimitInput.setText("");
        LimitEventLabel.setVisible(true);
        EventLimitInput.setVisible(true);
    }//GEN-LAST:event_FaceEventButtonActionPerformed

    private void UserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserButtonActionPerformed
        // TODO add your handling code here:
        EventTabs.setEnabledAt(0, false);
        EventTabs.setEnabledAt(1, false);
        EventTabs.setEnabledAt(2, false);
        EventTabs.setEnabledAt(3, true);
        EventTabs.setEnabledAt(4, true);
        EventTabs.setSelectedIndex(3);
        RegisterButton.setEnabled(true);
    }//GEN-LAST:event_UserButtonActionPerformed

    private void DeleteEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteEventButtonActionPerformed
        // TODO add your handling code here:
        String deleteName = DeleteEventInput.getText();
        ConfirmResultTextArea.setText(events.deleteEvent(deleteName));
        if (events.getEventObj().length != EventNameComboBox.getItemCount()) {
            EventNameComboBox.removeItem(deleteName);
        }
        DisplayEventButton.doClick();
        DeleteEventInput.setText("");
    }//GEN-LAST:event_DeleteEventButtonActionPerformed

    private void RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButtonActionPerformed
        // TODO add your handling code here:
        String eventToRegister = SearchField.getText();
        userEvents = events.registerEvent(eventToRegister, userEvents);
        double totalFees = 0;
        String message = "You have registered for the following event(s):\n";
        for (int i = 0; i < userEvents.length; i++) {
            message += "* " + userEvents[i].getName() + "\n";
            totalFees += userEvents[i].getFees();
        }
        message += "\n\nThe cost is $" + String.format("%.2f", totalFees);
        ConfirmResultTextArea.setText(message);
    }//GEN-LAST:event_RegisterButtonActionPerformed

    private void EventDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventDetailsButtonActionPerformed
        // TODO add your handling code here:
        DisplayTextArea.setText(events.eventDetails());
    }//GEN-LAST:event_EventDetailsButtonActionPerformed

    private void SearchNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchNameButtonActionPerformed
        // TODO add your handling code here:
        SearchField.setText("");
        if (AdminButton.isSelected()) {
            RegisterButton.setEnabled(false);
        } else {
            RegisterButton.setEnabled(true);
        }

    }//GEN-LAST:event_SearchNameButtonActionPerformed

    private void EventNameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventNameComboBoxActionPerformed
        // TODO add your handling code here:
        int selectedIndex = EventNameComboBox.getSelectedIndex();
        String message = " Type:\t" + events.getEventObj()[selectedIndex].eventType() + "\n Name:\t" + events.getEventObj()[selectedIndex].getName() + "\n Organiser:\t" + events.getEventObj()[selectedIndex].getOrganiser() + "\n Date:\t" + events.getEventObj()[selectedIndex].getDateTime() + "\n Period:\t" + events.getEventObj()[selectedIndex].getTimePeriod() + "\n Fees:\t" + String.format("%.2f", events.getEventObj()[selectedIndex].getFees());
        if (events.getEventObj()[selectedIndex].eventType().equals("Online") == false) {
            message += "\n Limit:\t" + events.getEventObj()[selectedIndex].getLimit() + "\n Participants:\t" + events.getEventObj()[selectedIndex].getParticipants();
        }
        SelectedEventDetails.setText(message);
        if (events.getEventObj()[selectedIndex].eventType().equals("Online")) {
            EventProperty.removeItem("Limit");
            EventProperty.removeItem("Participants");
        } else {
            EventProperty.addItem("Limit");
            EventProperty.addItem("Participants");
        }
        EventProperty.setSelectedIndex(0);

    }//GEN-LAST:event_EventNameComboBoxActionPerformed

    private void EventPropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventPropertyActionPerformed
        // TODO add your handling code here:
        int selectedPropIndex = EventProperty.getSelectedIndex();
        int selectedIndex = EventNameComboBox.getSelectedIndex();
        if (selectedPropIndex == 5 && events.getEventObj()[selectedIndex].eventType().equals("Online")) {
            ChangeTypeLimit.setVisible(true);
            ChangeTypeLimitInput.setVisible(true);
            ChangeTypeParticipants.setVisible(true);
            ChangeTypeParticipantsInput.setVisible(true);
        } else {
            ChangeTypeLimit.setVisible(false);
            ChangeTypeLimitInput.setVisible(false);
            ChangeTypeParticipants.setVisible(false);
            ChangeTypeParticipantsInput.setVisible(false);
        }
        switch (selectedPropIndex) {
            case 0:
                EditedProperty.setText(events.getEventObj()[selectedIndex].getName());
                break;
            case 1:
                EditedProperty.setText(events.getEventObj()[selectedIndex].getOrganiser());
                break;
            case 2:
                String[] date = events.getEventObj()[selectedIndex].getDateTime().toString().split("T");
                String dateFormat = date[0] + " " + date[1];
                EditedProperty.setText(dateFormat);
                break;
            case 3:
                EditedProperty.setText(String.format("%.2f", events.getEventObj()[selectedIndex].getTimePeriod()));
                break;
            case 4:
                EditedProperty.setText(String.format("%.2f", events.getEventObj()[selectedIndex].getFees()));
                break;
            case 5:
                EditedProperty.setText(events.getEventObj()[selectedIndex].eventType() + " event. Press edit to change Event type.");
                EditedProperty.setEditable(false);
                break;
            case 6:
                EditedProperty.setText(events.getEventObj()[selectedIndex].getLimit() + "");
                break;
            case 7:
                EditedProperty.setText(events.getEventObj()[selectedIndex].getParticipants() + "");
                break;
        }

    }//GEN-LAST:event_EventPropertyActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        // TODO add your handling code here:
        int save = JOptionPane.showOptionDialog(new JFrame(), "Save Changes?", "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Yes", "No"}, JOptionPane.YES_OPTION);
        if (save == JOptionPane.YES_OPTION) {
            events.saveChanges();
        }
        System.exit(0);
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        // TODO add your handling code here:
        playSound("Sound\\\\wrongInput.wav");
        ChangeTypeLimitInput.setText("");
        ChangeTypeParticipantsInput.setText("");
        ConfirmResultTextArea.setText("");
        DeleteEventInput.setText("");
        DisplayTextArea.setText("");
        EditedProperty.setText("");
        EventDateInput.setText("");
        EventFeesInput.setText("");
        EventLimitInput.setText("");
        EventNameInput.setText("");
        EventOrganiserInput.setText("");
        EventPeriodInput.setText("");
        RegisteredEvents.setText("");
        SearchField.setText("");
        SelectedEventDetails.setText("");
        
    }//GEN-LAST:event_ResetButtonActionPerformed

    private void ShowRegisteredButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowRegisteredButtonActionPerformed
        // TODO add your handling code here:
        if (userEvents.length == 0) {
            UnregisterLabel.setVisible(false);
            RegisteredEventName.setVisible(false);
            UnregisterButton.setVisible(false);
        } else {
            UnregisterLabel.setVisible(true);
            RegisteredEventName.setVisible(true);
            UnregisterButton.setVisible(true);
        }
        String message = "S/N\t" + "Name\t" + "Organiser\t\t" + "Date/Time\t\t" + "Period(in Hours)   " + "Fees($)\n\n";
        double total = 0.0;
        RegisteredEventName.removeAllItems();
        for (int e = 0; e < userEvents.length; e++) {
            RegisteredEventName.addItem(userEvents[e].getName());
            message += (e + 1) + "\t" + userEvents[e].getName() + "\t" + userEvents[e].getOrganiser() + "\t\t" + userEvents[e].getDateTime() + "\t" + userEvents[e].getTimePeriod() + "\t     " + String.format("%.2f", userEvents[e].getFees()) + "\n";
            total += userEvents[e].getFees();
        }

        message += "\n You have registered for " + userEvents.length + " events .\n The total Cost is $" + String.format("%.2f", total) + ".";
        RegisteredEvents.setText(message);

    }//GEN-LAST:event_ShowRegisteredButtonActionPerformed

    private void UnregisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnregisterButtonActionPerformed
        // TODO add your handling code here:
        String unregisterName = RegisteredEventName.getSelectedItem().toString();
        int unregisterIndex = -1;
        int removeIndex = -1;
        for (int e = 0; e < userEvents.length; e++) {
            if (userEvents[e].getName().equals(unregisterName)) {
                unregisterIndex = e;
            }
        }
        for (int j = 0; j < events.getEventObj().length; j++) {
            if (events.getEventObj()[j].getName().equals(unregisterName)) {
                removeIndex = j;
            }
        }
        events.getEventObj()[removeIndex].removeParticipants();
        Event[] newUserEvents = new Event[userEvents.length - 1];
        for (int i = 0; i < userEvents.length; i++) {
            if (unregisterIndex > i) {
                newUserEvents[i] = userEvents[i];
            } else if (unregisterIndex < i) {
                newUserEvents[i - 1] = userEvents[i];
            }
        }
        userEvents = newUserEvents;
        ShowRegisteredButton.doClick();


    }//GEN-LAST:event_UnregisterButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EventGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EventGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EventGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EventGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EventGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddEventButton;
    private javax.swing.JRadioButton AdminButton;
    private javax.swing.JLabel ChangeTypeLimit;
    private javax.swing.JTextField ChangeTypeLimitInput;
    private javax.swing.JLabel ChangeTypeParticipants;
    private javax.swing.JTextField ChangeTypeParticipantsInput;
    private javax.swing.JTextArea ConfirmResultTextArea;
    private javax.swing.JButton DeleteEventButton;
    private javax.swing.JTextField DeleteEventInput;
    private javax.swing.JButton DisplayEventButton;
    private javax.swing.JTextArea DisplayTextArea;
    private javax.swing.JButton EditEventButton;
    private javax.swing.JTextField EditedProperty;
    private javax.swing.JTextField EventDateInput;
    private javax.swing.JButton EventDetailsButton;
    private javax.swing.JTextField EventFeesInput;
    private javax.swing.JTextField EventLimitInput;
    private javax.swing.JComboBox<String> EventNameComboBox;
    private javax.swing.JTextField EventNameInput;
    private javax.swing.JTextField EventOrganiserInput;
    private javax.swing.JTextField EventPeriodInput;
    private javax.swing.JComboBox<String> EventProperty;
    private javax.swing.JTabbedPane EventTabs;
    private javax.swing.JButton ExitButton;
    private javax.swing.JRadioButton FaceEventButton;
    private javax.swing.JLabel LimitEventLabel;
    private javax.swing.JRadioButton OnlineEventButton;
    private javax.swing.JButton RegisterButton;
    private javax.swing.JComboBox<String> RegisteredEventName;
    private javax.swing.JTextArea RegisteredEvents;
    private javax.swing.JButton ResetButton;
    private javax.swing.JButton SearchButton;
    private javax.swing.JRadioButton SearchFeesButton;
    private javax.swing.JTextField SearchField;
    private javax.swing.JRadioButton SearchNameButton;
    private javax.swing.JTextPane SelectedEventDetails;
    private javax.swing.JButton ShowRegisteredButton;
    private javax.swing.JButton UnregisterButton;
    private javax.swing.JLabel UnregisterLabel;
    private javax.swing.JRadioButton UserButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    // End of variables declaration//GEN-END:variables
}
